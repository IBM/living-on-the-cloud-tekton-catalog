apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-image-from-source
spec:
  resources:
    inputs:
      - name: git-repo
        type: git
  params:
    - name: pathToContext
      description: The path to the build context, used by Kaniko - within the workspace
      default: /workspace/source/
    - name: pathToDockerfile
      description: The path to the dockerfile to build
      default: Dockerfile
    - name: containerRepoUrl
      description: Base url to the container repo
    - name: containerRepoNamespace
      description: Namespace image is being stored under
    - name: deploymentImage
      description: Name of image to be deployed
    - name: mvnGoals
      description: Goals to be run during maven build step
  steps:
    - name: list-src
      image: alpine
      env:
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']    
      command:
        - "echo"
      args:
        - "$(params.containerRepoUrl)/$(resources.inputs.git-repo.path)/$(params.pathToContext)/$(params.containerRepoUrl)/$(params.containerRepoNamespace)/$(params.deploymentImage):$(BUILD_NUMBER)"
    - name: mvn
      image: gcr.io/cloud-builders/mvn
      workingDir: $(resources.inputs.git-repo.path)/$(params.pathToContext)
      command: ["/usr/bin/mvn"]
      args:
        - "$(params.mvnGoals)"
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:debug
      env:
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']    
      command:
        - /kaniko/executor
      args:
        - "--dockerfile=$(params.pathToDockerfile)"
        - "--destination=$(params.containerRepoUrl)/$(params.containerRepoNamespace)/$(params.deploymentImage):$(BUILD_NUMBER)"
        - "--context=dir://$(resources.inputs.git-repo.path)/$(params.pathToContext)"