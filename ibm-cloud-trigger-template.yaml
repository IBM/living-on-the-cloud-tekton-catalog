apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: ibm-cloud-trigger-template
spec:
  params:
  - name: pipelineName
    description: The name of the pipeline to be executed
    default: storm-tracker-application-pipeline
  - name: pathToContext
    description: The path to the build context, used by Kaniko - within the workspace
    default: .
  - name: pathToDeploymentFile
    description: The path to the yaml file describe how to deploy the application. 
    default: deployment.yaml
  - name: pathToDockerfile
    description: The path to the docker image build file
    default: Dockerfile
  - name: apiUrl
    description: The api url for interacting with ibm cloud
    default: cloud.ibm.com
  - name: containerRepoUrl
    description: Base url for container repository
  - name: containerRepoNamespace
    description: Namespace where image is located
  - name: deploymentImage
    description: Name of image to be deployed
  - name: nameOfCluster
    description: The number of cluster to deploy the image to
  - name: clusterRegion
    description: The region where the cluster resides
  - name: gitRepoUrl
    description: The git repo url to the repository of the application that is being built.
  - name: commitId
    description: The revision to build and deploy.
  - name: serviceAccountId
    description: The service account id the pipeline is run under
  - name: apiKey
    description: Service Account API KEY for interacting with IBM Cloud
  - name: gitUser
    description: The revision to build and deploy.
  - name: gitApiKey
    description: The service account id the pipeline is run under
  - name: gitUrl
    description: Service Account API KEY for interacting with IBM Cloud
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: $(params.deploymentImage)-build-
    spec:
      serviceAccountName: $(params.serviceAccountId)
      pipelineRef:
        name: storm-tracker-application-pipeline
      resources:
      - name: git-repo
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(params.commitId)
          - name: url
            value: $(params.gitRepoUrl)
      params:
      - name: pathToContext
        value: $(params.pathToContext)
      - name: pathToDeploymentFile
        value: $(params.pathToDeploymentFile)
      - name: pathToDockerfile
        value: $(params.pathToDockerfile)
      - name: apiUrl
        value: $(params.apiUrl)
      - name: containerRepoUrl
        value: $(params.containerRepoUrl)
      - name: containerRepoNamespace
        value: $(params.containerRepoNamespace)
      - name: deploymentImage
        value: $(params.deploymentImage)
      - name: nameOfCluster
        value: $(params.nameOfCluster)
      - name: clusterRegion
        value: $(params.clusterRegion)
  - apiVersion: v1
    stringData:
      username: iamapikey
      password: $(params.apiKey)
    kind: Secret
    type: kubernetes.io/basic-auth
    metadata:
      name: ibm-cr-secret
      annotations:
        tekton.dev/docker-0: $(params.containerRepoUrl)
  - apiVersion: v1
    kind: Secret
    type: kubernetes.io/basic-auth
    metadata:
      name: gitlab-secret
      annotations:
        tekton.dev/git-0: $(params.gitUrl)
    stringData:
      username: $(params.gitUser)
      password: $(params.gitApiKey)
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-account
secrets:
- name: ibm-cr-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: kube-api-secret
  annotations:
    kubernetes.io/service-account.name: service-account
    tekton.dev/docker-0: us.icr.io
type: kubernetes.io/service-account-token
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: pipeline-role
rules:
- apiGroups: ["extensions", "apps", ""]
  resources: ["services", "deployments", "pods"]
  verbs: ["get", "create", "update", "patch", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipeline-role
subjects:
- kind: ServiceAccount
  name: service-account
  namespace: default